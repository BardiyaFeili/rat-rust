name: CI, Test & Release

on:
  push:
    branches: ["**"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["**"]

env:
  PROJECT: rat # replace with the binary name in Cargo.toml

jobs:
  build:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Cargo registry & build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }} # speeds up rebuilds :contentReference[oaicite:1]{index=1}

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Run tests
        run: cargo test --target ${{ matrix.target }} --locked --verbose

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          EXT=""
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then EXT=".exe"; fi
          BIN=${PROJECT}${EXT}
          SRC=target/${{ matrix.target }}/release/$BIN
          DST=${PROJECT}-${{ matrix.target }}${EXT}
          cp "$SRC" "$DST"
          echo "Packaged: $DST"

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${PROJECT}-${{ matrix.target }}*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
          name: ${{ matrix.target }} # this downloads each built binary

      - name: Generate SHA-256 checksums
        run: |
          cd artifacts
          for f in *; do
            sha256sum "$f" > "$f".sha256
          done

      - name: Create GitHub Release and upload artifacts
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ${{ env.PROJECT }}
          target: x86_64-unknown-linux-gnu # action infers per-artifact uploads
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload checksum files
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: |
            artifacts/*.sha256
